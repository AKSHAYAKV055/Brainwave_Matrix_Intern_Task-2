import tkinter as tk
from tkinter import messagebox
import re

def calculate_strength_score(password):
    score = 0

    # Length Check
    if len(password) < 8:
        score -= 2
    elif len(password) < 12:
        score += 2
    else:
        score += 4

    # Complexity Check (lowercase, uppercase, digits, special chars)
    if re.search(r'[a-z]', password):
        score += 1
    if re.search(r'[A-Z]', password):
        score += 1
    if re.search(r'[0-9]', password):
        score += 1
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 1

    # Uniqueness Check (common passwords)
    common_passwords = ['123456', 'password', 'qwerty', 'abc123', 'letmein']
    if password.lower() in common_passwords:
        score -= 3

    score = max(0, min(score, 10))  # Ensure score is between 0 and 10
    return score

def check_password_strength():
    password = password_entry.get()
    if not password:
        messagebox.showwarning("Input Error", "Please enter a password.")
        return
    
    score = calculate_strength_score(password)
    
    if score <= 3:
        feedback = "Very Weak: Your password is easy to guess."
    elif score <= 5:
        feedback = "Weak: Your password could be stronger."
    elif score <= 7:
        feedback = "Good: Your password is fairly strong."
    else:
        feedback = "Strong: Your password is secure."
    
    result_label.config(text=f"Password Strength Score: {score}/10\n{feedback}")

# Set up the GUI
root = tk.Tk()
root.title("Password Strength Checker")

# Input field for password
password_label = tk.Label(root, text="Enter Password:")
password_label.pack(pady=5)

password_entry = tk.Entry(root, show="*", width=30)
password_entry.pack(pady=5)

# Button to check password strength
check_button = tk.Button(root, text="Check Strength", command=check_password_strength)
check_button.pack(pady=10)

# Label to display password strength feedback
result_label = tk.Label(root, text="Password Strength Score: 0/10\nFeedback: N/A", font=("Arial", 12))
result_label.pack(pady=10)

# Start the GUI loop
root.mainloop()
